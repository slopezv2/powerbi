// Summarize creates  one row context and one filter context
// Optimal daily avg
AvgDailyQty :=
VAR ProductsDatesWithSales =
    SUMMARIZE (
        Sales,
        'Product'[Product Name],
        'Date'[Date]
    )
VAR ProductsDatesWithSalesAndQty = 
    ADDCOLUMNS (
        ProductsDatesWithSales,
        "Daily qty", CALCULATE ( SUM (Sales[Quantity]))
    )
VAR Result = 
    AVERAGEX (
        ProductsDatesWithSalesAndQty,
        [Daily qty]
    )
RETURN Result
// Cross Join returns the product of 2 tables, the cartesian product
CROSSJOIN (
    ALL ( 'Product'[Product Name]),
    ALL ( 'Date'[Calendar Year])
)
AudioOr2007 :=
VAR CategoriesYears =
    CROSSJOIN (
        VALUES ( 'Product'[Category]),
        VALUES ( 'Date'[Calendar Year])
    )
VAR Audio2007 = 
    FILTER (
        CategoriesYears,
        OR (
            'Product'[Category] = "Audio",
            'Date'[Calendar Year] = "CY 2007"
        )
    )
VAR Result =
    CALCULATE (
        [Sales Amount],
        Audio2007
    )
RETURN Result
// UNION
AllCountryRegions =
UNION (
    ALL (Customer[CountryRegion]),
    ALL (Store[CountryRegion])
)
DistincrCountryRegions =
VAR CountryRegions =
    UNION (
        ALL ( Customer[CountryRegion]),
        ALL ( Store[CountryRegion])
    )
VAR UniqueCountryRegions =
    DISTINCT ( CountryRegions)
RETURN UniqueCountryRegions
/* Both sales amount and number of stores, including all country regions of both customers and stores */
DisctinctCountryRegions =
VAR CountryRegions =
    UNION(
        ALL (Customer[CountryRegion]),
        ALL (Store[CountryRegion])
    )
VAR UniqueCountryRegions =
    DISTINCT (CountryRegions)
VAR Result =
    ADDCOLUMNS (
        UniqueCountryRegions,
        "Customer Sales Amount",
            VAR CurrentRegion = [CountryRegion]
            RETURN 
                CALCULATE (
                    [Sales Amount],
                    Customer[CountryRegion] = CurrentRegion
                ),
        "Number of Stores",
            VAR CurrentRegion = [CountryRegion]
            RETURN
                CALCULATE (
                    COUNTROWS (Store),
                    Store[CountryRegion] = CurrentRegion
                )
    )
RETURN Result